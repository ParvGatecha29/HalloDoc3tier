@{
    Layout = "_adminDash";
}
@{
    ViewData["Title"] = "Provider Location";
}
<section class="h-100">
    <div class="d-flex flex-column align-items-center h-75 px-2">
        <div class="req_form_container w-75 back_div mt-3 d-flex justify-content-between mb-3">
            <div class="d-flex align-items-center">
                <h3 class="m-0">Provider Location</h3>
            </div>
            <div>
                <button class="float-end my-4 btn btn-outline-info backBtn" onclick="location.href='@Url.Action("AdminDashboard","AdminDashboard")'">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16"
                         height="16" fill="currentColor" class="bi bi-chevron-left fw-medium mb-1" viewBox="0 0 16 16">
                        <path fill-rule="evenodd"
                              d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0" />
                    </svg>Back
                </button>
            </div>
        </div>
        <div class="p-4 w-75 h-100 req_form_container shadow-lg rounded-2">
            <div id="map" class="w-100" style="height:600px">
            </div>
        </div>
    </div>

</section>
<script>
    document.getElementById("providerlocation-tab").classList.add("active");


    var map = L.map('map').setView([21, 78], 5);

    googleStreets = L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
        minZoom: 3,
        maxZoom: 20,
        subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],
        noWrap: true,
    });

    // googleStreets = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    //     maxZoom: 19,
    //     attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    // });

    var Jawg_Dark = L.tileLayer('https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.{ext}', {
        minZoom: 3,
        maxZoom: 20,
        attribution: '&copy; <a href="https://www.stadiamaps.com/" target="_blank">Stadia Maps</a> &copy; <a href="https://openmaptiles.org/" target="_blank">OpenMapTiles</a> &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
        ext: 'png',
        noWrap: true
    });

    var southWest = L.latLng(-89.98155760646617, -180),
        northEast = L.latLng(89.99346179538875, 180);
    var bounds = L.latLngBounds(southWest, northEast);

    map.setMaxBounds(bounds);
    map.on('drag', function () {
        map.panInsideBounds(bounds, { animate: false });
    });

    $(".btn-toggle").click(function () {
        if (localStorage.getItem('theme') != 'dark') {
            Jawg_Dark.addTo(map);
            googleStreets.removeFrom(map);

        }
        else {
            Jawg_Dark.removeFrom(map);
            googleStreets.addTo(map);
        }
    })

    if (localStorage.getItem('theme') == 'dark') {
        Jawg_Dark.addTo(map);

    }
    else {
        googleStreets.addTo(map);
    }

    var Icon = L.icon({
        iconUrl: '/images/label-1.svg',
        iconSize: [40, 40], // size of the icon

    });

    fetch('/AdminDashboard/GetProviders')
        .then(response => response.json())
        .then(data => {
            // Convert JSON data to GeoJSON format
            var geoJson = {
                type: "FeatureCollection",
                features: data.map(provider => ({

                    type: "Feature",
                    geometry: {
                        type: "Point",
                        coordinates: [provider.Longitude, provider.Latitude]
                    },
                    properties: {
                        name: provider.Physicianname
                    }
                }))
            };

            // Add GeoJSON to Leaflet map
            L.geoJSON(geoJson, {
                pointToLayer: function (feature, latlng) {
                    return L.marker(latlng, { icon: Icon }).addTo(map);
                },
                onEachFeature: function (feature, layer) {
                    if (feature.properties && feature.properties.name) {
                        layer.bindPopup(feature.properties.name);
                    }
                }
            }).addTo(map);
        });

</script>